///
/// Useful basic functions.
///
/// This is to load before almost everything else (like object, components, settings,
/// etc..) since functions may be used anywhere and do not rely on anything except
/// sometime on default settings (which can be overriden after).
///
/// No dependancies.
///

///
/// Strip unit from a number
///
@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

///
/// Convert a number without unit to a number with 'rem' unit
///
@function convert-to-rem($value, $base-value: null) {
    @if not $base-value {
        $base-value: $bb-rem-base-size;
    }

    $value: strip-unit($value) / strip-unit($base-value) * 1rem;

    // Enforce zero as unitless value
    @if $value == 0 {
        $value: 0;
    }

    @return $value;
}

///
/// Helper to convert pixel value to rem value
/// This is a great help to calculate rem size from fixed size from a mockup,
/// but remember to finally used the calculated value when it's done.
///
/// @arg {Number} $values [null]
///     Number in pixel unit.
///
/// @arg {Number} $base-value [null]
///     Default base document font size (in pixel).
///
/// @return {Number}
///     Calculated number in 'rem'.
///
@function rem-calc($values, $base-value: null) {
    @if $base-value == null {
        $base-value: $bb-rem-base-size;
    }

    $max: length($values);

    @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

    $rem-values: ();

    @for $i from 1 through $max {
        $rem-values: append($rem-values, convert-to-rem(nth($values, $i), $base-value));
    }

    @return $rem-values;
}

///
/// Shortand to augment given url with images directory.
///
/// @arg {String} $url [null]
///     Relative path to prepend with images directory path or url.
///
/// @return {String}
///     Url such as `$bb-image-directory` + `$url`.
///
@function image-url($url) {
    @return url($bb-image-directory + $url);
}

///
/// Shortand to augment given url with fonts directory.
///
/// @arg {String} $url [null]
///     Relative path to prepend with fonts directory path or url.
///
/// @return {String}
///     Url such as `$bb-font-directory` + `$url`.
///
@function font-url($url) {
    @return url($bb-font-directory + $url);
}

///
/// A shortcut function to get a scheme from the Bootbutt scheme map `$bb-schemes`.
///
/// @arg {String} $name [null]
///     Scheme item name to get from scheme map.
///
/// @return {Map}
///     A map of a scheme properties.
///
///
@function bb-scheme($name) {
    @if map-get($bb-schemes, $name) == null {
        @error "Given scheme name '#{$name}' is not registered from '$bb-schemes'.";
    }

    @return map-get($bb-schemes, $name);
}

///
/// A shortcut function to get default option value for scheme color mixin.
///
/// Scheme color mixin have some options to ignore some properties, this returns
/// default values for these options from the map setting `$bb-scheme-color-defaults`.
///
/// @arg {String} $name [null]
///     Scheme item name to get from scheme map.
///
/// @return {Map}
///     A map of a scheme properties.
///
///
@function bb-scheme-color-default($name) {
    @if map-get($bb-scheme-color-defaults, $name) == null {
        @error "Given scheme color option name '#{$name}' is not registered from '$bb-scheme-color-defaults'.";
    }

    @return map-get($bb-scheme-color-defaults, $name);
}
